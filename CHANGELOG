Release 0.5.0
-------------
* Removed prefix-base repository lookups on git kit driver

Release 0.4.3
-------------

* [FIX] Kit variables directory was not being consistently set at variable
  resolution

Release 0.4.2
-------------

* Bug fixes

Release 0.4.1
-------------

* [HOTFIX] main needs to be exposed

Release 0.4.0
-------------

* [+] Python interface: zenfig can be used as a python module. For the moment,
  only the function get_user_vars has been exported.

Release 0.3.5
-------------

* [+] New fact: font_antialias

Release 0.3.4
-------------

* [+] New fact: font_hintstyle
=======

Release 0.3.3
-------------

* [FIX] GitKitRepo: git.Repo.clone_from throws ValueError when it cannot read
  from stderr

Release 0.3.2
-------------

* [FIX] Wrong call to _cache_destroy_kit on GitRepoKit

Release 0.3.1
-------------

* [FIX]: Inconsistent variable resolution fixed
* [+] Optimizations on DepGraph

Release 0.3.0
-------------

* [-] Output files from kits are no longer confined to the user's home directory
* [+] New fact: zenfig_install_prefix, which equals the user's home directory
* [+] Kit interface: it now allows to specify versions, e.g. axltxl/i3==0.1.0
* [+] GitKitRepo: versions are interpreted as either remote branches or tags
* [-] GitKitRepo: it doesn't check for local repo size anymore
* [-] GitKitRepo: it doesn't perform shallow clones anymore, only regular cloning
      is done.
* [-] GitKitRepo: it destroys local kit cache on error and if it is an invalid one
* [+] Kit index variables are set as facts as well
* [+] New fact: zenfig_version
* [+] Renderer variable resolution revamped: New DepGraph system allows not
      only string variables to be evaluated but also strings found within
      dict and list variables found all across variable search paths.

Release 0.2.5
-------------

* [FIX] Regular expressions for git repositories were wrong

Release 0.2.3
-------------

* [-] Variable resolution fallback. All resolved variables are ultimately
      strings.

Release 0.2.2
-------------

* [+] XDG_DATA_HOME/templates is also added to the template search path:
      This is mostly because there are kits that offer the user to include
      his own custom templates as means of customization and expansion

Release 0.2.1
-------------

* [FIX] Types from resolved values are consistent

Release 0.2.0
-------------
* [+] New command: preview. It permits rendering only to stdout, rather than
      writing target files specified by a kit.
* [*] Several bug fixes
* [+] Error and warning messages are displayed no matter what
* [-] For the sake of preventing clutter, zenfig only works with kits, not
      individual templates, it still uses the same variable system. Users
      can still determine where to put their variables and how to specify them,
      but templates are not read freely anymore, only kits.
* [-] Template search is confined to directories inside the 'templates'
      directory of the specified kit.
* [+] Command-based interaction: zenfig [options] <command> <kit>
* [+] New command 'install' tells zenfig to render all specified 'output_files'
      from a kit into their respective destinations.
* [+] Kit interface revamped
    > General: kit interface gives the outside an instance of Kit which deals
      with all things regarding information about a kit file system to be used
      by other modules.
    > Git: kits are treated as individual repositories under a single cache,
    rather than just a master repo with all stuff within it.
    > Git: kits must be specified as <user_name>/<repo_name>, this will
    default lookup to github.
    > Minor kit interface changes in order for new features to be fulfilled
    > Git: kits are only updated if local copy is more than 3 days old
    > Git: Local copies of kits must not weight more than 2 MiB
    > Git: Entire URLs can be specified instead of default <user>/<repo>

Release 0.1.1
-------------

* [FIX]: Default terminal colors were incorrect
* [+] New default variable: term_color_background, defaults to color_base00
* [+] New default variable: term_color_foreground, defaults to color_base07
* [+] New default variable: term_color_cursor, defaults to color_base0A

Release 0.1.0
-------------
* Line comments can be prefixed with '#'
* Line statements are prefixed with '%'
* Several optimizations
* New variable syntax:
    Variables are resolved using the '@ syntax' instead of using jinja,
    namely, variables can refer to other user-defined variables indefinitely.

    Example:
    ---
    my_var: "asdf"
    another_var: '{{ @my_var }} {{ @term_color00 }}'

* All decorations have been corrected
* Kits ecosystem:
  ---------------
  A kit is basically a generic service configuration
  schema with both variable and template files targeting
  a specific service (e.g. i3wm). Kits can be downloaded
  and rendered using local variables set by the user.

  Kits are basically file system with the following
  layout:

  * Kit root
  |
  |__* templates
  | |__ main.j2
  | |__ (*.j2)
  |__* defaults
     |__ varfile.yml
     |__ hello.yml
     |__ (*.yml)

  Once the kit has been downloaded by the mean used,
  it gets rendered using established user variables.
  Variable search paths are applied as always, defaults
  set by the kit will be take into account the last
  just after XDG_DATA_HOME/zenfig/vars.

* Defaults/facts ecosystem:
  --------------------
  A bunch of variables are set by default by zenfig
  at startup time, these are default variables and facts
  the former are mutable and the latters are not, for the
  moment, they cover basics and will grow along new releases.

Release 0.0.1
-------------

* First release
